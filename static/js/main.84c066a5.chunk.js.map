{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","district","id","name","email","CardList","districts","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","monsters","fetch","then","response","console","log","json","users","catch","error","this","filteredMonsters","filter","monster","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yUAIaA,EAAO,SAACC,GACjB,OAEI,sBAAKC,UAAU,iBAAf,UACI,qBAAKC,IAAI,WAAWC,IAAG,+BAA0BH,EAAMI,SAASC,GAAzC,4BACzB,6BAAKL,EAAMI,SAASE,OACpB,6BAAKN,EAAMI,SAASG,YCLjBC,EAAW,SAACR,GACrB,OAAQ,qBAAKC,UAAU,YAAf,SACHD,EAAMS,UAAUC,KAAI,SAACN,GAAD,OACjB,cAAC,EAAD,CAAwBA,SAAUA,GAAvBA,EAASC,UCLnBM,G,MAAY,SAAC,GAA+B,IAA9BC,EAA6B,EAA7BA,YAAaC,EAAgB,EAAhBA,aACpC,OACI,uBAAOZ,UAAU,SAASa,KAAK,SAASF,YAAaA,EAAaG,SAAUF,MC4FrEG,E,kDA3Fb,aAAe,IAAD,8BACZ,gBAwEFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAACC,YAAaF,EAAEG,OAAOC,SAvErC,EAAKC,MAAQ,CACXC,SAAU,GAEVd,UAAW,CACT,CACEJ,GAAI,EACJC,KAAM,YAER,CACED,GAAI,EACJC,KAAM,aAER,CACED,GAAI,EACJC,KAAM,aAER,CACED,GAAI,EACJC,KAAM,SAGR,CACED,GAAI,EACJC,KAAM,YAER,CACED,GAAI,EACJC,KAAM,aAER,CACED,GAAI,EACJC,KAAM,aAER,CACED,GAAI,EACJC,KAAM,SAGR,CACED,GAAI,EACJC,KAAM,YAER,CACED,GAAI,GACJC,KAAM,aAER,CACED,GAAI,GACJC,KAAM,aAER,CACED,GAAI,GACJC,KAAM,UAIVa,YAAa,IA3DH,E,qDA+Dd,WAAqB,IAAD,OAClBK,MAAM,8CACHC,MAAK,SAACC,GAEL,OADAC,QAAQC,IAAIF,GACLA,EAASG,UAEjBJ,MAAK,SAACK,GAAD,OAAW,EAAKZ,SAAS,CAAEK,SAAUO,OAC1CC,OAAM,SAACC,GAAD,OAAWL,QAAQC,IAAII,Q,oBAOlC,WACE,MAAiCC,KAAKX,MAA9BC,EAAR,EAAQA,SAAUJ,EAAlB,EAAkBA,YACZe,EAAmBX,EAASY,QAAO,SAAAC,GAAO,OAC9CA,EAAQ9B,KAAK+B,cAAcC,SAASnB,EAAYkB,kBAClD,OACE,sBAAKpC,UAAU,MAAf,UACE,kDACA,cAAC,EAAD,CAAWW,YAAY,iBAAiBC,aAAcoB,KAAKpB,eAC3D,cAAC,EAAD,CAAUJ,UAAWyB,IAAqB,W,GAtFhCK,aCOHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.84c066a5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.style.css';\r\n\r\n\r\nexport const Card = (props)=>{\r\n    return(\r\n\r\n        <div className='card-container'>\r\n            <img alt='district' src={`https://robohash.org/${props.district.id}?set=set2&size=180x180`} />\r\n          <h2>{props.district.name}</h2>\r\n          <h5>{props.district.email}</h5>\r\n\r\n    </div>\r\n        )\r\n}","import React from 'react';\r\nimport './card-list.style.css';\r\n\r\nimport {Card} from '../card/card.component';\r\n\r\nexport const CardList = (props)=>{\r\n    return (<div className=\"card-list\">\r\n        {props.districts.map((district) => (\r\n            <Card key={district.id} district={district}/>\r\n        ))}\r\n        </div>)\r\n};\r\n","import React from 'react';\r\nimport './search-box.style.css'\r\n\r\nexport const SearchBox = ({placeholder, handleChange})=>{\r\n    return (\r\n        <input className='search' type=\"search\" placeholder={placeholder} onChange={handleChange}/>\r\n    )\r\n}\r\n","import \"./App.css\";\nimport { Component } from \"react\";\nimport { CardList } from \"./components/card-list/card-list.component\";\nimport { SearchBox } from \"./components/search-box/search-box.component\"\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n\n      districts: [\n        {\n          id: 1,\n          name: \"Lalitpur\",\n        },\n        {\n          id: 2,\n          name: \"Kathmandu\",\n        },\n        {\n          id: 3,\n          name: \"Bhaktapur\",\n        },\n        {\n          id: 4,\n          name: \"Kavre\",\n        },\n\n        {\n          id: 5,\n          name: \"Lalitpur\",\n        },\n        {\n          id: 6,\n          name: \"Kathmandu\",\n        },\n        {\n          id: 7,\n          name: \"Bhaktapur\",\n        },\n        {\n          id: 8,\n          name: \"Kavre\",\n        },\n\n        {\n          id: 9,\n          name: \"Lalitpur\",\n        },\n        {\n          id: 10,\n          name: \"Kathmandu\",\n        },\n        {\n          id: 11,\n          name: \"Bhaktapur\",\n        },\n        {\n          id: 12,\n          name: \"Kavre\",\n        },\n      ],\n\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://jsonplaceholder.typicode.com/users\")\n      .then((response) => {\n        console.log(response);\n        return response.json();\n      })\n      .then((users) => this.setState({ monsters: users }))\n      .catch((error) => console.log(error));\n  }\n\n  handleChange = (e)=>{\n    this.setState({searchField: e.target.value})\n  }\n\n  render() {\n    const { monsters, searchField} = this.state;\n    const filteredMonsters = monsters.filter(monster =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase()))\n    return (\n      <div className=\"App\">\n        <h1>Monsters Rolodex</h1>\n        <SearchBox placeholder=\"search monster\" handleChange={this.handleChange} />\n        <CardList districts={filteredMonsters} />{\" \"}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}